//------------------------------------------------
//--- 010 Editor v7.0 Binary Template
//
//      File: ANM.bt
//   Authors: Alexander Evdokimov
//   Version: 0.1
//   Purpose: Ghost Recon BNF files
// File Mask: *.anm
//
//   History: 
//
//------------------------------------------------

struct {  
 struct {
    UINT Length; // 
    char Text[Length]; // BeginANM.
  } BEGINANM_STRING <name="File ID (Signature)">;
 struct {
    time_t CreateDate <name="File Creation Date">;
    time_t ModifiedDate <name="File Modified Date">;
  } DATETIME <name="File DATETIME">;
} ANM_HEADER <name="ANM Header", fgcolor=cBlack, bgcolor=0xccff66>;

UINT Count;

typedef  struct {
  struct {  
    UINT SectionSize;
    UINT MN;
    struct {    
      UINT Length; // 
      char Text[Length]; //
      UINT Value;
    } VERSION; 
    struct {    
       UINT Length; // 
       char Text[Length]; //
    } MATERIAL_NAME_STRING; 
  } HEADER <name="HEADER">;

    struct {
      UINT Position_OutOfRangeType; // 1 - cycle, 3 - ping-pong
      UINT Rotation_OutOfRangeType; // 1 - cycle, 3 - ping-pong

      UINT n3;
      FLOAT n4; 
      UINT16 n5;
      UINT n6; 
      UINT16 n7; 
      UINT n8;  
      BYTE n9;
      BYTE n10; 
      UBYTE A;     
    } HEADER;

    UINT PKeysCount;    
    typedef struct {                         
        UINT ControllerType; // 3 - Linear Position, 5 - TCB Position
        if (ControllerType == 3) {
            FLOAT n2; // 0
            FLOAT Time;
            FLOAT X;          
            FLOAT Y;
            FLOAT Z;  
        }
        else {
            FLOAT n2; // 0
            FLOAT Time;
            FLOAT X;          
            FLOAT Y;
            FLOAT Z; 

            FLOAT Tension;  
            FLOAT Contunioty;
            FLOAT Bias;         
        }    
    } PositionKey;       
    typedef struct (int arraySize) {
      PositionKey array[arraySize] <optimize=false>;
    } PositionKeysArray;     
     PositionKeysArray POBPositionKeysArray(PKeysCount);

    UINT RKeysCount;
    typedef struct {
        UINT ControllerType;
        UINT MN; //0
        FLOAT Time;

        FLOAT MN;          
        FLOAT MN;
        FLOAT MN;
 
        FLOAT x;          
        FLOAT y;
        FLOAT z; 
        FLOAT Angle;
    } RotationKey;    
    typedef struct (int arraySize) {
      RotationKey array[arraySize] <optimize=false>;
    } RotationKeysArray;     
    RotationKeysArray POBRotationKeysArray(RKeysCount); 
  } ANIMATION <name="Animation properties">;

  typedef struct (int arraySize) {
      ANIMATION array[arraySize] <optimize=false>;
  } ANIMATION_ARRAY; 

  ANIMATION_ARRAY AnimationArray(Count) <name="Animation properties array">; 

struct {
  UINT Length;
  char Text[Length]; 
} ENDANM_STRING <name="ANM File End">;
