//------------------------------------------------
//--- 010 Editor v7.0 Binary Template
//
//      File: ANM.bt
//   Authors: Alexander Evdokimov
//   Version: 0.1
//   Purpose: Ghost Recon BNF files
// File Mask: *.anm
//
//   History: 
//
//------------------------------------------------

struct {  
 struct {
    UINT Length; // 
    char Text[Length]; // BeginANM.
  } BEGINANM_STRING <name="File ID (Signature)">;
 struct {
    time_t CreateDate <name="File Creation Date">;
    time_t ModifiedDate <name="File Modified Date">;
  } DATETIME <name="File DATETIME">;
} ANM_HEADER <name="ANM Header", fgcolor=cBlack, bgcolor=0xccff66>;

UINT Count;

typedef  struct {
  struct {  
    UINT SectionSize;
    UINT MN;
    struct {    
      UINT Length; // 
      char Text[Length]; //
      UINT Value;
    } VERSION; 
    struct {    
       UINT Length; // 
       char Text[Length]; //
    } MATERIAL_NAME_STRING; 
  } HEADER <name="HEADER">;

    struct {
      UINT Count;
      UINT MN;
      UINT16 MN;
      UINT16 MN;
      UINT MN;
      UINT MN;
       FLOAT MN;
      UINT MN;
      UINT16 MN;
      BYTE MN;
      UINT MN;
    } param;

   UINT PointCount; // 6
   typedef struct {
            UINT x;        
            FLOAT y;
            FLOAT z;
            FLOAT x;
            FLOAT y;
            FLOAT z;
            FLOAT x;
            FLOAT y;
            FLOAT z;
            FLOAT y;
     } TRANSFORMATION_MATRIX <name="MATRIX">;

    typedef struct (int arraySize) {
        TRANSFORMATION_MATRIX array[arraySize] <optimize=false>;
    } TRANSFORMATION_MATRIX_ARRAY; 

   TRANSFORMATION_MATRIX_ARRAY TransformationMatrixArray(PointCount) <name="MATRIX Array">; 
  } ANIMATION;

  typedef struct (int arraySize) {
      ANIMATION array[arraySize] <optimize=false>;
  } ANIMATION_ARRAY; 

  ANIMATION_ARRAY AnimationArray(Count) <name="">; 

struct {
  UINT Length;
  char Text[Length]; 
} ENDANM_STRING <name="ANM File End">;
