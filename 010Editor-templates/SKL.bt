//------------------------------------------------
//--- 010 Editor v7.0 Binary Template
//
//      File: SKL.bt
//   Authors: Alexandr Evdokimov
//   Version: 0.5
//   Purpose: Rainbow Six Rogue Spear SKL File
// 
//   History: 
//   2018 Added Rogue Spear compatibility
//   2017 v0.5 Initial release
//
//------------------------------------------------

  UINT FileID;
  local UINT BoneCount; // This will always be the correct value for bone count, regardless of fileformat
  if (FileID != 1069547520) {
    BoneCount = FileID; // 0x3FC00000 / 1069547520
  } else {
    UINT BoneCountRaw;
    BoneCount = BoneCountRaw;
  }
  BYTE Data[10]; // 0111010100

  typedef struct {

    //Unconfirmed
    /*
    FLOAT RelPosition[3];  // relative to parent
    FLOAT Matrix[16];
    FLOAT AbsPosition[3]; // absolute position
    FLOAT F[8]; // Bone position
    */

    FLOAT F[30]; // Bone position

    struct {
      UINT Length;  
      char Text[Length];  
    } BONE_NAME;

    UINT BoneIndex;
    BYTE MN;
    struct {
      FLOAT MN;
      FLOAT MN;
      FLOAT MN;
    } A;
      FLOAT MN;
    struct {
      FLOAT MN;
      FLOAT MN;
      FLOAT MN;
    } B;
    struct {
      FLOAT MN;
      FLOAT MN;
      FLOAT MN;
    } C;
    FLOAT MN;
    if (BoneIndex == 15) BYTE N[5];  //10100
    if (BoneIndex == 12) BYTE N[11];
    if (BoneIndex == 8) BYTE N[7];
    if (BoneIndex == 4) BYTE N[3];
  } BONE <name=BoneName>;
 
  typedef struct (int arraySize) {
    BONE  array[arraySize] <optimize=false>;
  } BONE_ARRAY; 

  BONE_ARRAY BoneArray(BoneCount) <optimize=false, name="Bones">;

  string BoneName(BONE &bone) {
    return bone.BONE_NAME.Text;
  };
  
